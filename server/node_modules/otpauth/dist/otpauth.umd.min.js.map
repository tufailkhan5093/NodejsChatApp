{"version":3,"file":"otpauth.umd.min.js","sources":["../src/utils/encoding/uint.js","../node_modules/jssha/dist/sha.mjs","../src/utils/global-this.js","../src/utils/is-node.js","../src/utils/node-require.js","../src/utils/crypto/hmac-digest.js","../src/utils/pad.js","../src/utils/encoding/base32.js","../src/utils/encoding/hex.js","../src/utils/encoding/latin1.js","../src/utils/encoding/utf8.js","../src/utils/crypto/random-bytes.js","../src/secret.js","../src/utils/crypto/timing-safe-equal.js","../src/hotp.js","../src/totp.js","../src/uri.js","../src/version.js"],"sourcesContent":["/**\n * Converts an integer to an ArrayBuffer.\n * @param {number} num Integer.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst uintToBuf = (num) => {\n  const buf = new ArrayBuffer(8);\n  const arr = new Uint8Array(buf);\n  let acc = num;\n\n  for (let i = 7; i >= 0; i--) {\n    if (acc === 0) break;\n    arr[i] = acc & 255;\n    acc -= arr[i];\n    acc /= 256;\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to an integer.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {number} Integer.\n */\nconst uintFromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let num = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== 0) {\n      num *= 256;\n      num += arr[i];\n    }\n  }\n\n  return num;\n};\n\nexport { uintToBuf, uintFromBuf };\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function n(t,n,e,r){let i,s,o;const h=n||[0],u=(e=e||0)>>>3,w=-1===r?3:0;for(i=0;i<t.length;i+=1)o=i+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[i]<<8*(w+r*(o%4));return{value:h,binLen:8*t.length+e}}function e(e,r,i){switch(r){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(e){case\"HEX\":return function(t,n,e){return function(t,n,e,r){let i,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=n||[0],w=(e=e||0)>>>3,c=-1===r?3:0;for(i=0;i<t.length;i+=2){if(s=parseInt(t.substr(i,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(i>>>1)+w,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+r*(h%4))}return{value:u,binLen:4*t.length+e}}(t,n,e,i)};case\"TEXT\":return function(t,n,e){return function(t,n,e,r,i){let s,o,h,u,w,c,f,a,l=0;const A=e||[0],E=(r=r||0)>>>3;if(\"UTF8\"===n)for(f=-1===i?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=l+E,w=c>>>2;A.length<=w;)A.push(0);A[w]|=o[u]<<8*(f+i*(c%4)),l+=1}else for(f=-1===i?2:0,a=\"UTF16LE\"===n&&1!==i||\"UTF16LE\"!==n&&1===i,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===a&&(u=255&s,s=u<<8|s>>>8),c=l+E,w=c>>>2;A.length<=w;)A.push(0);A[w]|=s<<8*(f+i*(c%4)),l+=2}return{value:A,binLen:8*l+r}}(t,r,n,e,i)};case\"B64\":return function(n,e,r){return function(n,e,r,i){let s,o,h,u,w,c,f,a=0;const l=e||[0],A=(r=r||0)>>>3,E=-1===i?3:0,H=n.indexOf(\"=\");if(-1===n.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(n=n.replace(/=/g,\"\"),-1!==H&&H<n.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<n.length;o+=4){for(w=n.substr(o,4),u=0,h=0;h<w.length;h+=1)s=t.indexOf(w.charAt(h)),u|=s<<18-6*h;for(h=0;h<w.length-1;h+=1){for(f=a+A,c=f>>>2;l.length<=c;)l.push(0);l[c]|=(u>>>16-8*h&255)<<8*(E+i*(f%4)),a+=1}}return{value:l,binLen:8*a+r}}(n,e,r,i)};case\"BYTES\":return function(t,n,e){return function(t,n,e,r){let i,s,o,h;const u=n||[0],w=(e=e||0)>>>3,c=-1===r?3:0;for(s=0;s<t.length;s+=1)i=t.charCodeAt(s),h=s+w,o=h>>>2,u.length<=o&&u.push(0),u[o]|=i<<8*(c+r*(h%4));return{value:u,binLen:8*t.length+e}}(t,n,e,i)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t,e,r){return function(t,e,r,i){return n(new Uint8Array(t),e,r,i)}(t,e,r,i)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t,e,r){return n(t,e,r,i)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function r(n,e,r,i){switch(n){case\"HEX\":return function(t){return function(t,n,e,r){let i,s,o=\"\";const h=n/8,u=-1===e?3:0;for(i=0;i<h;i+=1)s=t[i>>>2]>>>8*(u+e*(i%4)),o+=\"0123456789abcdef\".charAt(s>>>4&15)+\"0123456789abcdef\".charAt(15&s);return r.outputUpper?o.toUpperCase():o}(t,e,r,i)};case\"B64\":return function(n){return function(n,e,r,i){let s,o,h,u,w,c=\"\";const f=e/8,a=-1===r?3:0;for(s=0;s<f;s+=3)for(u=s+1<f?n[s+1>>>2]:0,w=s+2<f?n[s+2>>>2]:0,h=(n[s>>>2]>>>8*(a+r*(s%4))&255)<<16|(u>>>8*(a+r*((s+1)%4))&255)<<8|w>>>8*(a+r*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=e?t.charAt(h>>>6*(3-o)&63):i.b64Pad;return c}(n,e,r,i)};case\"BYTES\":return function(t){return function(t,n,e){let r,i,s=\"\";const o=n/8,h=-1===e?3:0;for(r=0;r<o;r+=1)i=t[r>>>2]>>>8*(h+e*(r%4))&255,s+=String.fromCharCode(i);return s}(t,e,r)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t){return function(t,n,e){let r;const i=n/8,s=new ArrayBuffer(i),o=new Uint8Array(s),h=-1===e?3:0;for(r=0;r<i;r+=1)o[r]=t[r>>>2]>>>8*(h+e*(r%4))&255;return s}(t,e,r)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t){return function(t,n,e){let r;const i=n/8,s=-1===e?3:0,o=new Uint8Array(i);for(r=0;r<i;r+=1)o[r]=t[r>>>2]>>>8*(s+e*(r%4))&255;return o}(t,e,r)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}const i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],o=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],h=\"Chosen SHA variant is not supported\";function u(t,n){let e,r;const i=t.binLen>>>3,s=n.binLen>>>3,o=i<<3,h=4-i<<3;if(i%4!=0){for(e=0;e<s;e+=4)r=i+e>>>2,t.value[r]|=n.value[e>>>2]<<o,t.value.push(0),t.value[r+1]|=n.value[e>>>2]>>>h;return(t.value.length<<2)-4>=s+i&&t.value.pop(),{value:t.value,binLen:t.binLen+n.binLen}}return{value:t.value.concat(n.value),binLen:t.binLen+n.binLen}}function w(t){const n={outputUpper:!1,b64Pad:\"=\",outputLen:-1},e=t||{},r=\"Output length must be a multiple of 8\";if(n.outputUpper=e.outputUpper||!1,e.b64Pad&&(n.b64Pad=e.b64Pad),e.outputLen){if(e.outputLen%8!=0)throw new Error(r);n.outputLen=e.outputLen}else if(e.shakeLen){if(e.shakeLen%8!=0)throw new Error(r);n.outputLen=e.shakeLen}if(\"boolean\"!=typeof n.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof n.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return n}function c(t,n,r,i){const s=t+\" must include a value and format\";if(!n){if(!i)throw new Error(s);return i}if(void 0===n.value||!n.format)throw new Error(s);return e(n.format,n.encoding||\"UTF8\",r)(n.value)}class f{constructor(t,n,e){const r=e||{};if(this.t=n,this.i=r.encoding||\"UTF8\",this.numRounds=r.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.s=t,this.o=[],this.h=0,this.u=!1,this.l=0,this.A=!1,this.H=[],this.S=[]}update(t){let n,e=0;const r=this.p>>>5,i=this.m(t,this.o,this.h),s=i.binLen,o=i.value,h=s>>>5;for(n=0;n<h;n+=r)e+this.p<=s&&(this.C=this.R(o.slice(n,n+r),this.C),e+=this.p);this.l+=e,this.o=o.slice(e>>>5),this.h=s%this.p,this.u=!0}getHash(t,n){let e,i,s=this.U;const o=w(n);if(this.v){if(-1===o.outputLen)throw new Error(\"Output length must be specified in options\");s=o.outputLen}const h=r(t,s,this.K,o);if(this.A&&this.T)return h(this.T(o));for(i=this.F(this.o.slice(),this.h,this.l,this.g(this.C),s),e=1;e<this.numRounds;e+=1)this.v&&s%32!=0&&(i[i.length-1]&=16777215>>>24-s%32),i=this.F(i,s,0,this.B(this.s),s);return h(i)}setHMACKey(t,n,r){if(!this.L)throw new Error(\"Variant does not support HMAC\");if(this.u)throw new Error(\"Cannot set MAC key after calling update\");const i=e(n,(r||{}).encoding||\"UTF8\",this.K);this.M(i(t))}M(t){const n=this.p>>>3,e=n/4-1;let r;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.A)throw new Error(\"MAC key already set\");for(n<t.binLen/8&&(t.value=this.F(t.value,t.binLen,0,this.B(this.s),this.U));t.value.length<=e;)t.value.push(0);for(r=0;r<=e;r+=1)this.H[r]=909522486^t.value[r],this.S[r]=1549556828^t.value[r];this.C=this.R(this.H,this.C),this.l=this.p,this.A=!0}getHMAC(t,n){const e=w(n);return r(t,this.U,this.K,e)(this.k())}k(){let t;if(!this.A)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const n=this.F(this.o.slice(),this.h,this.l,this.g(this.C),this.U);return t=this.R(this.S,this.B(this.s)),t=this.F(n,this.U,this.p,t,this.U),t}}function a(t,n){return t<<n|t>>>32-n}function l(t,n){return t>>>n|t<<32-n}function A(t,n){return t>>>n}function E(t,n,e){return t^n^e}function H(t,n,e){return t&n^~t&e}function S(t,n,e){return t&n^t&e^n&e}function b(t){return l(t,2)^l(t,13)^l(t,22)}function p(t,n){const e=(65535&t)+(65535&n);return(65535&(t>>>16)+(n>>>16)+(e>>>16))<<16|65535&e}function d(t,n,e,r){const i=(65535&t)+(65535&n)+(65535&e)+(65535&r);return(65535&(t>>>16)+(n>>>16)+(e>>>16)+(r>>>16)+(i>>>16))<<16|65535&i}function m(t,n,e,r,i){const s=(65535&t)+(65535&n)+(65535&e)+(65535&r)+(65535&i);return(65535&(t>>>16)+(n>>>16)+(e>>>16)+(r>>>16)+(i>>>16)+(s>>>16))<<16|65535&s}function C(t){return l(t,7)^l(t,18)^A(t,3)}function y(t){return l(t,6)^l(t,11)^l(t,25)}function R(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function U(t,n){let e,r,i,s,o,h,u;const w=[];for(e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],u=0;u<80;u+=1)w[u]=u<16?t[u]:a(w[u-3]^w[u-8]^w[u-14]^w[u-16],1),h=u<20?m(a(e,5),H(r,i,s),o,1518500249,w[u]):u<40?m(a(e,5),E(r,i,s),o,1859775393,w[u]):u<60?m(a(e,5),S(r,i,s),o,2400959708,w[u]):m(a(e,5),E(r,i,s),o,3395469782,w[u]),o=s,s=i,i=a(r,30),r=e,e=h;return n[0]=p(e,n[0]),n[1]=p(r,n[1]),n[2]=p(i,n[2]),n[3]=p(s,n[3]),n[4]=p(o,n[4]),n}function v(t,n,e,r){let i;const s=15+(n+65>>>9<<4),o=n+e;for(;t.length<=s;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,i=0;i<t.length;i+=16)r=U(t.slice(i,i+16),r);return r}class K extends f{constructor(t,n,r){if(\"SHA-1\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.L=!0,this.T=this.k,this.K=-1,this.m=e(this.t,this.i,this.K),this.R=U,this.g=function(t){return t.slice()},this.B=R,this.F=v,this.C=[1732584193,4023233417,2562383102,271733878,3285377520],this.p=512,this.U=160,this.v=!1,i.hmacKey&&this.M(c(\"hmacKey\",i.hmacKey,this.K))}}function T(t){let n;return n=\"SHA-224\"==t?s.slice():o.slice(),n}function F(t,n){let e,r,s,o,h,u,w,c,f,a,E;const R=[];for(e=n[0],r=n[1],s=n[2],o=n[3],h=n[4],u=n[5],w=n[6],c=n[7],E=0;E<64;E+=1)R[E]=E<16?t[E]:d(l(U=R[E-2],17)^l(U,19)^A(U,10),R[E-7],C(R[E-15]),R[E-16]),f=m(c,y(h),H(h,u,w),i[E],R[E]),a=p(b(e),S(e,r,s)),c=w,w=u,u=h,h=p(o,f),o=s,s=r,r=e,e=p(f,a);var U;return n[0]=p(e,n[0]),n[1]=p(r,n[1]),n[2]=p(s,n[2]),n[3]=p(o,n[3]),n[4]=p(h,n[4]),n[5]=p(u,n[5]),n[6]=p(w,n[6]),n[7]=p(c,n[7]),n}class g extends f{constructor(t,n,r){if(\"SHA-224\"!==t&&\"SHA-256\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.T=this.k,this.L=!0,this.K=-1,this.m=e(this.t,this.i,this.K),this.R=F,this.g=function(t){return t.slice()},this.B=T,this.F=function(n,e,r,i){return function(t,n,e,r,i){let s,o;const h=15+(n+65>>>9<<4),u=n+e;for(;t.length<=h;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[h]=4294967295&u,t[h-1]=u/4294967296|0,s=0;s<t.length;s+=16)r=F(t.slice(s,s+16),r);return o=\"SHA-224\"===i?[r[0],r[1],r[2],r[3],r[4],r[5],r[6]]:r,o}(n,e,r,i,t)},this.C=T(t),this.p=512,this.U=\"SHA-224\"===t?224:256,this.v=!1,i.hmacKey&&this.M(c(\"hmacKey\",i.hmacKey,this.K))}}class B{constructor(t,n){this.Y=t,this.N=n}}function L(t,n){let e;return n>32?(e=64-n,new B(t.N<<n|t.Y>>>e,t.Y<<n|t.N>>>e)):0!==n?(e=32-n,new B(t.Y<<n|t.N>>>e,t.N<<n|t.Y>>>e)):t}function M(t,n){let e;return n<32?(e=32-n,new B(t.Y>>>n|t.N<<e,t.N>>>n|t.Y<<e)):(e=64-n,new B(t.N>>>n|t.Y<<e,t.Y>>>n|t.N<<e))}function k(t,n){return new B(t.Y>>>n,t.N>>>n|t.Y<<32-n)}function Y(t,n,e){return new B(t.Y&n.Y^t.Y&e.Y^n.Y&e.Y,t.N&n.N^t.N&e.N^n.N&e.N)}function N(t){const n=M(t,28),e=M(t,34),r=M(t,39);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}function I(t,n){let e,r;e=(65535&t.N)+(65535&n.N),r=(t.N>>>16)+(n.N>>>16)+(e>>>16);const i=(65535&r)<<16|65535&e;e=(65535&t.Y)+(65535&n.Y)+(r>>>16),r=(t.Y>>>16)+(n.Y>>>16)+(e>>>16);return new B((65535&r)<<16|65535&e,i)}function X(t,n,e,r){let i,s;i=(65535&t.N)+(65535&n.N)+(65535&e.N)+(65535&r.N),s=(t.N>>>16)+(n.N>>>16)+(e.N>>>16)+(r.N>>>16)+(i>>>16);const o=(65535&s)<<16|65535&i;i=(65535&t.Y)+(65535&n.Y)+(65535&e.Y)+(65535&r.Y)+(s>>>16),s=(t.Y>>>16)+(n.Y>>>16)+(e.Y>>>16)+(r.Y>>>16)+(i>>>16);return new B((65535&s)<<16|65535&i,o)}function z(t,n,e,r,i){let s,o;s=(65535&t.N)+(65535&n.N)+(65535&e.N)+(65535&r.N)+(65535&i.N),o=(t.N>>>16)+(n.N>>>16)+(e.N>>>16)+(r.N>>>16)+(i.N>>>16)+(s>>>16);const h=(65535&o)<<16|65535&s;s=(65535&t.Y)+(65535&n.Y)+(65535&e.Y)+(65535&r.Y)+(65535&i.Y)+(o>>>16),o=(t.Y>>>16)+(n.Y>>>16)+(e.Y>>>16)+(r.Y>>>16)+(i.Y>>>16)+(s>>>16);return new B((65535&o)<<16|65535&s,h)}function x(t,n){return new B(t.Y^n.Y,t.N^n.N)}function _(t){const n=M(t,19),e=M(t,61),r=k(t,6);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}function O(t){const n=M(t,1),e=M(t,8),r=k(t,7);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}function P(t){const n=M(t,14),e=M(t,18),r=M(t,41);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}const V=[new B(i[0],3609767458),new B(i[1],602891725),new B(i[2],3964484399),new B(i[3],2173295548),new B(i[4],4081628472),new B(i[5],3053834265),new B(i[6],2937671579),new B(i[7],3664609560),new B(i[8],2734883394),new B(i[9],1164996542),new B(i[10],1323610764),new B(i[11],3590304994),new B(i[12],4068182383),new B(i[13],991336113),new B(i[14],633803317),new B(i[15],3479774868),new B(i[16],2666613458),new B(i[17],944711139),new B(i[18],2341262773),new B(i[19],2007800933),new B(i[20],1495990901),new B(i[21],1856431235),new B(i[22],3175218132),new B(i[23],2198950837),new B(i[24],3999719339),new B(i[25],766784016),new B(i[26],2566594879),new B(i[27],3203337956),new B(i[28],1034457026),new B(i[29],2466948901),new B(i[30],3758326383),new B(i[31],168717936),new B(i[32],1188179964),new B(i[33],1546045734),new B(i[34],1522805485),new B(i[35],2643833823),new B(i[36],2343527390),new B(i[37],1014477480),new B(i[38],1206759142),new B(i[39],344077627),new B(i[40],1290863460),new B(i[41],3158454273),new B(i[42],3505952657),new B(i[43],106217008),new B(i[44],3606008344),new B(i[45],1432725776),new B(i[46],1467031594),new B(i[47],851169720),new B(i[48],3100823752),new B(i[49],1363258195),new B(i[50],3750685593),new B(i[51],3785050280),new B(i[52],3318307427),new B(i[53],3812723403),new B(i[54],2003034995),new B(i[55],3602036899),new B(i[56],1575990012),new B(i[57],1125592928),new B(i[58],2716904306),new B(i[59],442776044),new B(i[60],593698344),new B(i[61],3733110249),new B(i[62],2999351573),new B(i[63],3815920427),new B(3391569614,3928383900),new B(3515267271,566280711),new B(3940187606,3454069534),new B(4118630271,4000239992),new B(116418474,1914138554),new B(174292421,2731055270),new B(289380356,3203993006),new B(460393269,320620315),new B(685471733,587496836),new B(852142971,1086792851),new B(1017036298,365543100),new B(1126000580,2618297676),new B(1288033470,3409855158),new B(1501505948,4234509866),new B(1607167915,987167468),new B(1816402316,1246189591)];function Z(t){return\"SHA-384\"===t?[new B(3418070365,s[0]),new B(1654270250,s[1]),new B(2438529370,s[2]),new B(355462360,s[3]),new B(1731405415,s[4]),new B(41048885895,s[5]),new B(3675008525,s[6]),new B(1203062813,s[7])]:[new B(o[0],4089235720),new B(o[1],2227873595),new B(o[2],4271175723),new B(o[3],1595750129),new B(o[4],2917565137),new B(o[5],725511199),new B(o[6],4215389547),new B(o[7],327033209)]}function j(t,n){let e,r,i,s,o,h,u,w,c,f,a,l;const A=[];for(e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],h=n[5],u=n[6],w=n[7],a=0;a<80;a+=1)a<16?(l=2*a,A[a]=new B(t[l],t[l+1])):A[a]=X(_(A[a-2]),A[a-7],O(A[a-15]),A[a-16]),c=z(w,P(o),(H=h,S=u,new B((E=o).Y&H.Y^~E.Y&S.Y,E.N&H.N^~E.N&S.N)),V[a],A[a]),f=I(N(e),Y(e,r,i)),w=u,u=h,h=o,o=I(s,c),s=i,i=r,r=e,e=I(c,f);var E,H,S;return n[0]=I(e,n[0]),n[1]=I(r,n[1]),n[2]=I(i,n[2]),n[3]=I(s,n[3]),n[4]=I(o,n[4]),n[5]=I(h,n[5]),n[6]=I(u,n[6]),n[7]=I(w,n[7]),n}class q extends f{constructor(t,n,r){if(\"SHA-384\"!==t&&\"SHA-512\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.T=this.k,this.L=!0,this.K=-1,this.m=e(this.t,this.i,this.K),this.R=j,this.g=function(t){return t.slice()},this.B=Z,this.F=function(n,e,r,i){return function(t,n,e,r,i){let s,o;const h=31+(n+129>>>10<<5),u=n+e;for(;t.length<=h;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[h]=4294967295&u,t[h-1]=u/4294967296|0,s=0;s<t.length;s+=32)r=j(t.slice(s,s+32),r);return o=\"SHA-384\"===i?[(r=r)[0].Y,r[0].N,r[1].Y,r[1].N,r[2].Y,r[2].N,r[3].Y,r[3].N,r[4].Y,r[4].N,r[5].Y,r[5].N]:[r[0].Y,r[0].N,r[1].Y,r[1].N,r[2].Y,r[2].N,r[3].Y,r[3].N,r[4].Y,r[4].N,r[5].Y,r[5].N,r[6].Y,r[6].N,r[7].Y,r[7].N],o}(n,e,r,i,t)},this.C=Z(t),this.p=1024,this.U=\"SHA-384\"===t?384:512,this.v=!1,i.hmacKey&&this.M(c(\"hmacKey\",i.hmacKey,this.K))}}const D=[new B(0,1),new B(0,32898),new B(2147483648,32906),new B(2147483648,2147516416),new B(0,32907),new B(0,2147483649),new B(2147483648,2147516545),new B(2147483648,32777),new B(0,138),new B(0,136),new B(0,2147516425),new B(0,2147483658),new B(0,2147516555),new B(2147483648,139),new B(2147483648,32905),new B(2147483648,32771),new B(2147483648,32770),new B(2147483648,128),new B(0,32778),new B(2147483648,2147483658),new B(2147483648,2147516545),new B(2147483648,32896),new B(0,2147483649),new B(2147483648,2147516424)],G=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];function J(t){let n;const e=[];for(n=0;n<5;n+=1)e[n]=[new B(0,0),new B(0,0),new B(0,0),new B(0,0),new B(0,0)];return e}function Q(t){let n;const e=[];for(n=0;n<5;n+=1)e[n]=t[n].slice();return e}function W(t,n){let e,r,i,s;const o=[],h=[];if(null!==t)for(r=0;r<t.length;r+=2)n[(r>>>1)%5][(r>>>1)/5|0]=x(n[(r>>>1)%5][(r>>>1)/5|0],new B(t[r+1],t[r]));for(e=0;e<24;e+=1){for(s=J(),r=0;r<5;r+=1)o[r]=(u=n[r][0],w=n[r][1],c=n[r][2],f=n[r][3],a=n[r][4],new B(u.Y^w.Y^c.Y^f.Y^a.Y,u.N^w.N^c.N^f.N^a.N));for(r=0;r<5;r+=1)h[r]=x(o[(r+4)%5],L(o[(r+1)%5],1));for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)n[r][i]=x(n[r][i],h[r]);for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)s[i][(2*r+3*i)%5]=L(n[r][i],G[r][i]);for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)n[r][i]=x(s[r][i],new B(~s[(r+1)%5][i].Y&s[(r+2)%5][i].Y,~s[(r+1)%5][i].N&s[(r+2)%5][i].N));n[0][0]=x(n[0][0],D[e])}var u,w,c,f,a;return n}function $(t){let n,e,r=0;const i=[0,0],s=[4294967295&t,t/4294967296&2097151];for(n=6;n>=0;n--)e=s[n>>2]>>>8*n&255,0===e&&0===r||(i[r+1>>2]|=e<<8*(r+1),r+=1);return r=0!==r?r:1,i[0]|=r,{value:r+1>4?i:[i[0]],binLen:8+8*r}}function tt(t){return u($(t.binLen),t)}function nt(t,n){let e,r=$(n);r=u(r,t);const i=n>>>2,s=(i-r.value.length%i)%i;for(e=0;e<s;e++)r.value.push(0);return r.value}class et extends f{constructor(t,n,r){let i=6,s=0;super(t,n,r);const o=r||{};if(1!==this.numRounds){if(o.kmacKey||o.hmacKey)throw new Error(\"Cannot set numRounds with MAC\");if(\"CSHAKE128\"===this.s||\"CSHAKE256\"===this.s)throw new Error(\"Cannot set numRounds for CSHAKE variants\")}switch(this.K=1,this.m=e(this.t,this.i,this.K),this.R=W,this.g=Q,this.B=J,this.C=J(),this.v=!1,t){case\"SHA3-224\":this.p=s=1152,this.U=224,this.L=!0,this.T=this.k;break;case\"SHA3-256\":this.p=s=1088,this.U=256,this.L=!0,this.T=this.k;break;case\"SHA3-384\":this.p=s=832,this.U=384,this.L=!0,this.T=this.k;break;case\"SHA3-512\":this.p=s=576,this.U=512,this.L=!0,this.T=this.k;break;case\"SHAKE128\":i=31,this.p=s=1344,this.U=-1,this.v=!0,this.L=!1,this.T=null;break;case\"SHAKE256\":i=31,this.p=s=1088,this.U=-1,this.v=!0,this.L=!1,this.T=null;break;case\"KMAC128\":i=4,this.p=s=1344,this.I(r),this.U=-1,this.v=!0,this.L=!1,this.T=this.X;break;case\"KMAC256\":i=4,this.p=s=1088,this.I(r),this.U=-1,this.v=!0,this.L=!1,this.T=this.X;break;case\"CSHAKE128\":this.p=s=1344,i=this._(r),this.U=-1,this.v=!0,this.L=!1,this.T=null;break;case\"CSHAKE256\":this.p=s=1088,i=this._(r),this.U=-1,this.v=!0,this.L=!1,this.T=null;break;default:throw new Error(h)}this.F=function(t,n,e,r,o){return function(t,n,e,r,i,s,o){let h,u,w=0;const c=[],f=i>>>5,a=n>>>5;for(h=0;h<a&&n>=i;h+=f)r=W(t.slice(h,h+f),r),n-=i;for(t=t.slice(h),n%=i;t.length<f;)t.push(0);for(h=n>>>3,t[h>>2]^=s<<h%4*8,t[f-1]^=2147483648,r=W(t,r);32*c.length<o&&(u=r[w%5][w/5|0],c.push(u.N),!(32*c.length>=o));)c.push(u.Y),w+=1,0==64*w%i&&(W(null,r),w=0);return c}(t,n,0,r,s,i,o)},o.hmacKey&&this.M(c(\"hmacKey\",o.hmacKey,this.K))}_(t,n){const e=function(t){const n=t||{};return{funcName:c(\"funcName\",n.funcName,1,{value:[],binLen:0}),customization:c(\"Customization\",n.customization,1,{value:[],binLen:0})}}(t||{});n&&(e.funcName=n);const r=u(tt(e.funcName),tt(e.customization));if(0!==e.customization.binLen||0!==e.funcName.binLen){const t=nt(r,this.p>>>3);for(let n=0;n<t.length;n+=this.p>>>5)this.C=this.R(t.slice(n,n+(this.p>>>5)),this.C),this.l+=this.p;return 4}return 31}I(t){const n=function(t){const n=t||{};return{kmacKey:c(\"kmacKey\",n.kmacKey,1),funcName:{value:[1128353099],binLen:32},customization:c(\"Customization\",n.customization,1,{value:[],binLen:0})}}(t||{});this._(t,n.funcName);const e=nt(tt(n.kmacKey),this.p>>>3);for(let t=0;t<e.length;t+=this.p>>>5)this.C=this.R(e.slice(t,t+(this.p>>>5)),this.C),this.l+=this.p;this.A=!0}X(t){const n=u({value:this.o.slice(),binLen:this.h},function(t){let n,e,r=0;const i=[0,0],s=[4294967295&t,t/4294967296&2097151];for(n=6;n>=0;n--)e=s[n>>2]>>>8*n&255,0===e&&0===r||(i[r>>2]|=e<<8*r,r+=1);return r=0!==r?r:1,i[r>>2]|=r<<8*r,{value:r+1>4?i:[i[0]],binLen:8+8*r}}(t.outputLen));return this.F(n.value,n.binLen,this.l,this.g(this.C),t.outputLen)}}export default class{constructor(t,n,e){if(\"SHA-1\"==t)this.O=new K(t,n,e);else if(\"SHA-224\"==t||\"SHA-256\"==t)this.O=new g(t,n,e);else if(\"SHA-384\"==t||\"SHA-512\"==t)this.O=new q(t,n,e);else{if(\"SHA3-224\"!=t&&\"SHA3-256\"!=t&&\"SHA3-384\"!=t&&\"SHA3-512\"!=t&&\"SHAKE128\"!=t&&\"SHAKE256\"!=t&&\"CSHAKE128\"!=t&&\"CSHAKE256\"!=t&&\"KMAC128\"!=t&&\"KMAC256\"!=t)throw new Error(h);this.O=new et(t,n,e)}}update(t){this.O.update(t)}getHash(t,n){return this.O.getHash(t,n)}setHMACKey(t,n,e){this.O.setHMACKey(t,n,e)}getHMAC(t,n){return this.O.getHMAC(t,n)}}\n//# sourceMappingURL=sha.mjs.map\n","/**\n * \"globalThis\" ponyfill.\n * {@link https://mathiasbynens.be/notes/globalthis|A horrifying globalThis polyfill in universal JavaScript}\n * @type {Object.<string, *>}\n */\nconst globalThis = (() => {\n  // @ts-ignore\n  if (typeof globalThis === \"object\") return globalThis;\n  else {\n    Object.defineProperty(Object.prototype, \"__GLOBALTHIS__\", {\n      get() {\n        return this;\n      },\n      configurable: true,\n    });\n    try {\n      // @ts-ignore\n      // eslint-disable-next-line no-undef\n      if (typeof __GLOBALTHIS__ !== \"undefined\") return __GLOBALTHIS__;\n    } finally {\n      // @ts-ignore\n      delete Object.prototype.__GLOBALTHIS__;\n    }\n  }\n\n  // Still unable to determine \"globalThis\", fall back to a naive method.\n  if (typeof self !== \"undefined\") return self;\n  else if (typeof window !== \"undefined\") return window;\n  else if (typeof global !== \"undefined\") return global;\n\n  return undefined;\n})();\n\nexport { globalThis };\n","import { globalThis } from \"./global-this.js\";\n\n/**\n * Detect if running in Node.js.\n * @type {boolean}\n */\nconst isNode =\n  Object.prototype.toString.call(globalThis.process) === \"[object process]\";\n\nexport { isNode };\n","import { isNode } from \"./is-node.js\";\n\n/**\n * Dynamically import Node.js modules (\"eval\" is used to prevent bundlers from including the module).\n * {@link https://github.com/webpack/webpack/issues/8826|webpack/webpack#8826}\n * @param {string} name Module name.\n * @returns {*} Module.\n */\nconst nodeRequire = isNode ? eval(\"require\") : () => {};\n\nexport { nodeRequire };\n","import jsSHA from \"jssha\";\n\nimport { globalThis } from \"../global-this.js\";\nimport { isNode } from \"../is-node.js\";\nimport { nodeRequire } from \"../node-require.js\";\n\nconst NodeBuffer = isNode ? globalThis.Buffer : undefined;\nconst NodeCrypto = isNode ? nodeRequire(\"crypto\") : undefined;\n\n/**\n * OpenSSL to jsSHA algorithms.\n * @type {Object.<string, string>}\n */\nconst OPENSSL_TO_JSSHA_ALGO = {\n  SHA1: \"SHA-1\",\n  SHA224: \"SHA-224\",\n  SHA256: \"SHA-256\",\n  SHA384: \"SHA-384\",\n  SHA512: \"SHA-512\",\n  \"SHA3-224\": \"SHA3-224\",\n  \"SHA3-256\": \"SHA3-256\",\n  \"SHA3-384\": \"SHA3-384\",\n  \"SHA3-512\": \"SHA3-512\",\n};\n\n/**\n * Calculates an HMAC digest.\n * In Node.js, the command \"openssl list -digest-algorithms\" displays the available digest algorithms.\n * @param {string} algorithm Algorithm.\n * @param {ArrayBuffer} key Key.\n * @param {ArrayBuffer} message Message.\n * @returns {ArrayBuffer} Digest.\n */\nconst hmacDigest = (algorithm, key, message) => {\n  if (isNode) {\n    const hmac = NodeCrypto.createHmac(algorithm, NodeBuffer.from(key));\n    hmac.update(NodeBuffer.from(message));\n    return hmac.digest().buffer;\n  } else {\n    const variant = OPENSSL_TO_JSSHA_ALGO[algorithm.toUpperCase()];\n    if (typeof variant === \"undefined\") {\n      throw new TypeError(\"Unknown hash function\");\n    }\n    // @ts-ignore\n    const hmac = new jsSHA(variant, \"ARRAYBUFFER\");\n    hmac.setHMACKey(key, \"ARRAYBUFFER\");\n    hmac.update(message);\n    return hmac.getHMAC(\"ARRAYBUFFER\");\n  }\n};\n\nexport { hmacDigest };\n","/**\n * Pads a number with leading zeros.\n * @param {number|string} num Number.\n * @param {number} digits Digits.\n * @returns {string} Padded number.\n */\nconst pad = (num, digits) => {\n  let prefix = \"\";\n  let repeat = digits - String(num).length;\n  while (repeat-- > 0) prefix += \"0\";\n  return `${prefix}${num}`;\n};\n\nexport { pad };\n","/**\n * RFC 4648 base32 alphabet without pad.\n * @type {string}\n */\nconst ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\n/**\n * Converts a base32 string to an ArrayBuffer (RFC 4648).\n * {@link https://github.com/LinusU/base32-decode|LinusU/base32-decode}\n * @param {string} str Base32 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst base32ToBuf = (str) => {\n  // Canonicalize to all upper case and remove padding if it exists.\n  const cstr = str.toUpperCase().replace(/=+$/, \"\");\n\n  const buf = new ArrayBuffer(((cstr.length * 5) / 8) | 0);\n  const arr = new Uint8Array(buf);\n  let bits = 0;\n  let value = 0;\n  let index = 0;\n\n  for (let i = 0; i < cstr.length; i++) {\n    const idx = ALPHABET.indexOf(cstr[i]);\n    if (idx === -1) throw new TypeError(`Invalid character found: ${cstr[i]}`);\n\n    value = (value << 5) | idx;\n    bits += 5;\n\n    if (bits >= 8) {\n      arr[index++] = (value >>> (bits - 8)) & 255;\n      bits -= 8;\n    }\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to a base32 string (RFC 4648).\n * {@link https://github.com/LinusU/base32-encode|LinusU/base32-encode}\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Base32 string.\n */\nconst base32FromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let bits = 0;\n  let value = 0;\n  let str = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    value = (value << 8) | arr[i];\n    bits += 8;\n\n    while (bits >= 5) {\n      str += ALPHABET[(value >>> (bits - 5)) & 31];\n      bits -= 5;\n    }\n  }\n\n  if (bits > 0) {\n    str += ALPHABET[(value << (5 - bits)) & 31];\n  }\n\n  return str;\n};\n\nexport { base32ToBuf, base32FromBuf };\n","/**\n * Converts a hexadecimal string to an ArrayBuffer.\n * @param {string} str Hexadecimal string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst hexToBuf = (str) => {\n  const buf = new ArrayBuffer(str.length / 2);\n  const arr = new Uint8Array(buf);\n\n  for (let i = 0; i < str.length; i += 2) {\n    arr[i / 2] = parseInt(str.substr(i, 2), 16);\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Hexadecimal string.\n */\nconst hexFromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let str = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    const hex = arr[i].toString(16);\n    if (hex.length === 1) str += \"0\";\n    str += hex;\n  }\n\n  return str.toUpperCase();\n};\n\nexport { hexToBuf, hexFromBuf };\n","/**\n * Converts a Latin-1 string to an ArrayBuffer.\n * @param {string} str Latin-1 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst latin1ToBuf = (str) => {\n  const buf = new ArrayBuffer(str.length);\n  const arr = new Uint8Array(buf);\n\n  for (let i = 0; i < str.length; i++) {\n    arr[i] = str.charCodeAt(i) & 0xff;\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to a Latin-1 string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Latin-1 string.\n */\nconst latin1FromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let str = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    str += String.fromCharCode(arr[i]);\n  }\n\n  return str;\n};\n\nexport { latin1ToBuf, latin1FromBuf };\n","import { globalThis } from \"../global-this.js\";\n\n/**\n * TextEncoder instance.\n * @type {TextEncoder|null}\n */\nconst ENCODER = globalThis.TextEncoder\n  ? new globalThis.TextEncoder(\"utf-8\")\n  : null;\n\n/**\n * TextDecoder instance.\n * @type {TextDecoder|null}\n */\nconst DECODER = globalThis.TextDecoder\n  ? new globalThis.TextDecoder(\"utf-8\")\n  : null;\n\n/**\n * Converts an UTF-8 string to an ArrayBuffer.\n * @param {string} str String.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst utf8ToBuf = (str) => {\n  if (!ENCODER) {\n    throw new Error(\"Encoding API not available\");\n  }\n\n  return ENCODER.encode(str).buffer;\n};\n\n/**\n * Converts an ArrayBuffer to an UTF-8 string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} String.\n */\nconst utf8FromBuf = (buf) => {\n  if (!DECODER) {\n    throw new Error(\"Encoding API not available\");\n  }\n\n  return DECODER.decode(buf);\n};\n\nexport { utf8ToBuf, utf8FromBuf };\n","import { globalThis } from \"../global-this.js\";\nimport { isNode } from \"../is-node.js\";\nimport { nodeRequire } from \"../node-require.js\";\n\nconst NodeCrypto = isNode ? nodeRequire(\"crypto\") : undefined;\nconst BrowserCrypto = !isNode\n  ? globalThis.crypto || globalThis.msCrypto\n  : undefined;\n\n/**\n * Returns random bytes.\n * @param {number} size Size.\n * @returns {ArrayBuffer} Random bytes.\n */\nconst randomBytes = (size) => {\n  if (isNode) {\n    return NodeCrypto.randomBytes(size).buffer;\n  } else {\n    if (!BrowserCrypto || !BrowserCrypto.getRandomValues) {\n      throw new Error(\"Cryptography API not available\");\n    }\n    return BrowserCrypto.getRandomValues(new Uint8Array(size)).buffer;\n  }\n};\n\nexport { randomBytes };\n","import { base32ToBuf, base32FromBuf } from \"./utils/encoding/base32.js\";\nimport { hexToBuf, hexFromBuf } from \"./utils/encoding/hex.js\";\nimport { latin1ToBuf, latin1FromBuf } from \"./utils/encoding/latin1.js\";\nimport { utf8ToBuf, utf8FromBuf } from \"./utils/encoding/utf8.js\";\nimport { randomBytes } from \"./utils/crypto/random-bytes.js\";\n\n/**\n * OTP secret key.\n */\nclass Secret {\n  /**\n   * Creates a secret key object.\n   * @param {Object} [config] Configuration options.\n   * @param {ArrayBuffer} [config.buffer=randomBytes] Secret key.\n   * @param {number} [config.size=20] Number of random bytes to generate, ignored if 'buffer' is provided.\n   */\n  constructor({ buffer, size = 20 } = {}) {\n    /**\n     * Secret key.\n     * @type {ArrayBuffer}\n     */\n    this.buffer = typeof buffer === \"undefined\" ? randomBytes(size) : buffer;\n  }\n\n  /**\n   * Converts a Latin-1 string to a Secret object.\n   * @param {string} str Latin-1 string.\n   * @returns {Secret} Secret object.\n   */\n  static fromLatin1(str) {\n    return new Secret({ buffer: latin1ToBuf(str) });\n  }\n\n  /**\n   * Converts an UTF-8 string to a Secret object.\n   * @param {string} str UTF-8 string.\n   * @returns {Secret} Secret object.\n   */\n  static fromUTF8(str) {\n    return new Secret({ buffer: utf8ToBuf(str) });\n  }\n\n  /**\n   * Converts a base32 string to a Secret object.\n   * @param {string} str Base32 string.\n   * @returns {Secret} Secret object.\n   */\n  static fromBase32(str) {\n    return new Secret({ buffer: base32ToBuf(str) });\n  }\n\n  /**\n   * Converts a hexadecimal string to a Secret object.\n   * @param {string} str Hexadecimal string.\n   * @returns {Secret} Secret object.\n   */\n  static fromHex(str) {\n    return new Secret({ buffer: hexToBuf(str) });\n  }\n\n  /**\n   * Latin-1 string representation of secret key.\n   * @type {string}\n   */\n  get latin1() {\n    Object.defineProperty(this, \"latin1\", {\n      enumerable: true,\n      value: latin1FromBuf(this.buffer),\n    });\n\n    return this.latin1;\n  }\n\n  /**\n   * UTF-8 string representation of secret key.\n   * @type {string}\n   */\n  get utf8() {\n    Object.defineProperty(this, \"utf8\", {\n      enumerable: true,\n      value: utf8FromBuf(this.buffer),\n    });\n\n    return this.utf8;\n  }\n\n  /**\n   * Base32 string representation of secret key.\n   * @type {string}\n   */\n  get base32() {\n    Object.defineProperty(this, \"base32\", {\n      enumerable: true,\n      value: base32FromBuf(this.buffer),\n    });\n\n    return this.base32;\n  }\n\n  /**\n   * Hexadecimal string representation of secret key.\n   * @type {string}\n   */\n  get hex() {\n    Object.defineProperty(this, \"hex\", {\n      enumerable: true,\n      value: hexFromBuf(this.buffer),\n    });\n\n    return this.hex;\n  }\n}\n\nexport { Secret };\n","import { globalThis } from \"../global-this.js\";\nimport { isNode } from \"../is-node.js\";\nimport { nodeRequire } from \"../node-require.js\";\n\nconst NodeBuffer = isNode ? globalThis.Buffer : undefined;\nconst NodeCrypto = isNode ? nodeRequire(\"crypto\") : undefined;\n\n/**\n * Returns true if a is equal to b, without leaking timing information that would allow an attacker to guess one of the values.\n * @param {string} a String a.\n * @param {string} b String b.\n * @returns {boolean} Equality result.\n */\nconst timingSafeEqual = (a, b) => {\n  if (isNode) {\n    return NodeCrypto.timingSafeEqual(NodeBuffer.from(a), NodeBuffer.from(b));\n  } else {\n    if (a.length !== b.length) {\n      throw new TypeError(\"Input strings must have the same length\");\n    }\n    let i = -1;\n    let out = 0;\n    while (++i < a.length) {\n      out |= a.charCodeAt(i) ^ b.charCodeAt(i);\n    }\n    return out === 0;\n  }\n};\n\nexport { timingSafeEqual };\n","import { uintToBuf } from \"./utils/encoding/uint.js\";\nimport { hmacDigest } from \"./utils/crypto/hmac-digest.js\";\nimport { pad } from \"./utils/pad.js\";\nimport { Secret } from \"./secret.js\";\nimport { timingSafeEqual } from \"./utils/crypto/timing-safe-equal.js\";\n\n/**\n * HOTP: An HMAC-based One-time Password Algorithm.\n * {@link https://tools.ietf.org/html/rfc4226|RFC 4226}\n */\nclass HOTP {\n  /**\n   * Default configuration.\n   * @type {{\n   *   issuer: string,\n   *   label: string,\n   *   algorithm: string,\n   *   digits: number,\n   *   counter: number\n   *   window: number\n   * }}\n   */\n  static get defaults() {\n    return {\n      issuer: \"\",\n      label: \"OTPAuth\",\n      algorithm: \"SHA1\",\n      digits: 6,\n      counter: 0,\n      window: 1,\n    };\n  }\n\n  /**\n   * Creates an HOTP object.\n   * @param {Object} [config] Configuration options.\n   * @param {string} [config.issuer=''] Account provider.\n   * @param {string} [config.label='OTPAuth'] Account label.\n   * @param {Secret|string} [config.secret=Secret] Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.counter=0] Initial counter value.\n   */\n  constructor({\n    issuer = HOTP.defaults.issuer,\n    label = HOTP.defaults.label,\n    secret = new Secret(),\n    algorithm = HOTP.defaults.algorithm,\n    digits = HOTP.defaults.digits,\n    counter = HOTP.defaults.counter,\n  } = {}) {\n    /**\n     * Account provider.\n     * @type {string}\n     */\n    this.issuer = issuer;\n    /**\n     * Account label.\n     * @type {string}\n     */\n    this.label = label;\n    /**\n     * Secret key.\n     * @type {Secret}\n     */\n    this.secret =\n      typeof secret === \"string\" ? Secret.fromBase32(secret) : secret;\n    /**\n     * HMAC hashing algorithm.\n     * @type {string}\n     */\n    this.algorithm = algorithm.toUpperCase();\n    /**\n     * Token length.\n     * @type {number}\n     */\n    this.digits = digits;\n    /**\n     * Initial counter value.\n     * @type {number}\n     */\n    this.counter = counter;\n  }\n\n  /**\n   * Generates an HOTP token.\n   * @param {Object} config Configuration options.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.counter=0] Counter value.\n   * @returns {string} Token.\n   */\n  static generate({\n    secret,\n    algorithm = HOTP.defaults.algorithm,\n    digits = HOTP.defaults.digits,\n    counter = HOTP.defaults.counter,\n  }) {\n    const digest = new Uint8Array(\n      hmacDigest(algorithm, secret.buffer, uintToBuf(counter))\n    );\n    const offset = digest[digest.byteLength - 1] & 15;\n    const otp =\n      (((digest[offset] & 127) << 24) |\n        ((digest[offset + 1] & 255) << 16) |\n        ((digest[offset + 2] & 255) << 8) |\n        (digest[offset + 3] & 255)) %\n      10 ** digits;\n\n    return pad(otp, digits);\n  }\n\n  /**\n   * Generates an HOTP token.\n   * @param {Object} [config] Configuration options.\n   * @param {number} [config.counter=this.counter++] Counter value.\n   * @returns {string} Token.\n   */\n  generate({ counter = this.counter++ } = {}) {\n    return HOTP.generate({\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      counter,\n    });\n  }\n\n  /**\n   * Validates an HOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} config.digits Token length.\n   * @param {number} [config.counter=0] Counter value.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta, or null if the token is not found.\n   */\n  static validate({\n    token,\n    secret,\n    algorithm,\n    digits,\n    counter = HOTP.defaults.counter,\n    window = HOTP.defaults.window,\n  }) {\n    // Return early if the token length does not match the digit number.\n    if (token.length !== digits) return null;\n\n    let delta = null;\n\n    for (let i = counter - window; i <= counter + window; ++i) {\n      const generatedToken = HOTP.generate({\n        secret,\n        algorithm,\n        digits,\n        counter: i,\n      });\n\n      if (timingSafeEqual(token, generatedToken)) {\n        delta = i - counter;\n      }\n    }\n\n    return delta;\n  }\n\n  /**\n   * Validates an HOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {number} [config.counter=this.counter] Counter value.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta, or null if the token is not found.\n   */\n  validate({ token, counter = this.counter, window }) {\n    return HOTP.validate({\n      token,\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      counter,\n      window,\n    });\n  }\n\n  /**\n   * Returns a Google Authenticator key URI.\n   * @returns {string} URI.\n   */\n  toString() {\n    const e = encodeURIComponent;\n    return (\n      \"otpauth://hotp/\" +\n      `${\n        this.issuer.length > 0\n          ? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&`\n          : `${e(this.label)}?`\n      }` +\n      `secret=${e(this.secret.base32)}&` +\n      `algorithm=${e(this.algorithm)}&` +\n      `digits=${e(this.digits)}&` +\n      `counter=${e(this.counter)}`\n    );\n  }\n}\n\nexport { HOTP };\n","import { HOTP } from \"./hotp.js\";\nimport { Secret } from \"./secret.js\";\n\n/**\n * TOTP: Time-Based One-Time Password Algorithm.\n * {@link https://tools.ietf.org/html/rfc6238|RFC 6238}\n */\nclass TOTP {\n  /**\n   * Default configuration.\n   * @type {{\n   *   issuer: string,\n   *   label: string,\n   *   algorithm: string,\n   *   digits: number,\n   *   period: number\n   *   window: number\n   * }}\n   */\n  static get defaults() {\n    return {\n      issuer: \"\",\n      label: \"OTPAuth\",\n      algorithm: \"SHA1\",\n      digits: 6,\n      period: 30,\n      window: 1,\n    };\n  }\n\n  /**\n   * Creates a TOTP object.\n   * @param {Object} [config] Configuration options.\n   * @param {string} [config.issuer=''] Account provider.\n   * @param {string} [config.label='OTPAuth'] Account label.\n   * @param {Secret|string} [config.secret=Secret] Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.period=30] Token time-step duration.\n   */\n  constructor({\n    issuer = TOTP.defaults.issuer,\n    label = TOTP.defaults.label,\n    secret = new Secret(),\n    algorithm = TOTP.defaults.algorithm,\n    digits = TOTP.defaults.digits,\n    period = TOTP.defaults.period,\n  } = {}) {\n    /**\n     * Account provider.\n     * @type {string}\n     */\n    this.issuer = issuer;\n    /**\n     * Account label.\n     * @type {string}\n     */\n    this.label = label;\n    /**\n     * Secret key.\n     * @type {Secret}\n     */\n    this.secret =\n      typeof secret === \"string\" ? Secret.fromBase32(secret) : secret;\n    /**\n     * HMAC hashing algorithm.\n     * @type {string}\n     */\n    this.algorithm = algorithm.toUpperCase();\n    /**\n     * Token length.\n     * @type {number}\n     */\n    this.digits = digits;\n    /**\n     * Token time-step duration.\n     * @type {number}\n     */\n    this.period = period;\n  }\n\n  /**\n   * Generates a TOTP token.\n   * @param {Object} config Configuration options.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.period=30] Token time-step duration.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @returns {string} Token.\n   */\n  static generate({\n    secret,\n    algorithm,\n    digits,\n    period = TOTP.defaults.period,\n    timestamp = Date.now(),\n  }) {\n    return HOTP.generate({\n      secret,\n      algorithm,\n      digits,\n      counter: Math.floor(timestamp / 1000 / period),\n    });\n  }\n\n  /**\n   * Generates a TOTP token.\n   * @param {Object} [config] Configuration options.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @returns {string} Token.\n   */\n  generate({ timestamp = Date.now() } = {}) {\n    return TOTP.generate({\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      period: this.period,\n      timestamp,\n    });\n  }\n\n  /**\n   * Validates a TOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} config.digits Token length.\n   * @param {number} [config.period=30] Token time-step duration.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta, or null if the token is not found.\n   */\n  static validate({\n    token,\n    secret,\n    algorithm,\n    digits,\n    period = TOTP.defaults.period,\n    timestamp = Date.now(),\n    window,\n  }) {\n    return HOTP.validate({\n      token,\n      secret,\n      algorithm,\n      digits,\n      counter: Math.floor(timestamp / 1000 / period),\n      window,\n    });\n  }\n\n  /**\n   * Validates a TOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta, or null if the token is not found.\n   */\n  validate({ token, timestamp, window }) {\n    return TOTP.validate({\n      token,\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      period: this.period,\n      timestamp,\n      window,\n    });\n  }\n\n  /**\n   * Returns a Google Authenticator key URI.\n   * @returns {string} URI.\n   */\n  toString() {\n    const e = encodeURIComponent;\n    return (\n      \"otpauth://totp/\" +\n      `${\n        this.issuer.length > 0\n          ? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&`\n          : `${e(this.label)}?`\n      }` +\n      `secret=${e(this.secret.base32)}&` +\n      `algorithm=${e(this.algorithm)}&` +\n      `digits=${e(this.digits)}&` +\n      `period=${e(this.period)}`\n    );\n  }\n}\n\nexport { TOTP };\n","import { HOTP } from \"./hotp.js\";\nimport { TOTP } from \"./totp.js\";\n\n/**\n * Key URI regex (otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS).\n * @type {RegExp}\n */\nconst OTPURI_REGEX =\n  /^otpauth:\\/\\/([ht]otp)\\/(.+)\\?([A-Z0-9.~_-]+=[^?&]*(?:&[A-Z0-9.~_-]+=[^?&]*)*)$/i;\n\n/**\n * RFC 4648 base32 alphabet with pad.\n * @type {RegExp}\n */\nconst SECRET_REGEX = /^[2-7A-Z]+=*$/i;\n\n/**\n * Regex for supported algorithms.\n * @type {RegExp}\n */\nconst ALGORITHM_REGEX = /^SHA(?:1|224|256|384|512|3-224|3-256|3-384|3-512)$/i;\n\n/**\n * Integer regex.\n * @type {RegExp}\n */\nconst INTEGER_REGEX = /^[+-]?\\d+$/;\n\n/**\n * Positive integer regex.\n * @type {RegExp}\n */\nconst POSITIVE_INTEGER_REGEX = /^\\+?[1-9]\\d*$/;\n\n/**\n * HOTP/TOTP object/string conversion.\n * {@link https://github.com/google/google-authenticator/wiki/Key-Uri-Format|Key URI Format}\n */\nclass URI {\n  /**\n   * Parses a Google Authenticator key URI and returns an HOTP/TOTP object.\n   * @param {string} uri Google Authenticator Key URI.\n   * @returns {HOTP|TOTP} HOTP/TOTP object.\n   */\n  static parse(uri) {\n    let uriGroups;\n\n    try {\n      uriGroups = uri.match(OTPURI_REGEX);\n    } catch (error) {\n      /* Handled below */\n    }\n\n    if (!Array.isArray(uriGroups)) {\n      throw new URIError(\"Invalid URI format\");\n    }\n\n    // Extract URI groups.\n    const uriType = uriGroups[1].toLowerCase();\n    const uriLabel = uriGroups[2]\n      .split(/(?::|%3A) *(.+)/i, 2)\n      .map(decodeURIComponent);\n    /** @type {Object.<string, string>} */\n    const uriParams = uriGroups[3].split(\"&\").reduce((acc, cur) => {\n      const pairArr = cur.split(/=(.*)/, 2).map(decodeURIComponent);\n      const pairKey = pairArr[0].toLowerCase();\n      const pairVal = pairArr[1];\n      /** @type {Object.<string, string>} */\n      const pairAcc = acc;\n\n      pairAcc[pairKey] = pairVal;\n      return pairAcc;\n    }, {});\n\n    // 'OTP' will be instantiated with 'config' argument.\n    let OTP;\n    const config = {};\n\n    if (uriType === \"hotp\") {\n      OTP = HOTP;\n\n      // Counter: required\n      if (\n        typeof uriParams.counter !== \"undefined\" &&\n        INTEGER_REGEX.test(uriParams.counter)\n      ) {\n        config.counter = parseInt(uriParams.counter, 10);\n      } else {\n        throw new TypeError(\"Missing or invalid 'counter' parameter\");\n      }\n    } else if (uriType === \"totp\") {\n      OTP = TOTP;\n\n      // Period: optional\n      if (typeof uriParams.period !== \"undefined\") {\n        if (POSITIVE_INTEGER_REGEX.test(uriParams.period)) {\n          config.period = parseInt(uriParams.period, 10);\n        } else {\n          throw new TypeError(\"Invalid 'period' parameter\");\n        }\n      }\n    } else {\n      throw new TypeError(\"Unknown OTP type\");\n    }\n\n    // Label: required\n    // Issuer: optional\n    if (uriLabel.length === 2) {\n      config.label = uriLabel[1];\n      config.issuer = uriLabel[0];\n    } else {\n      config.label = uriLabel[0];\n      if (typeof uriParams.issuer !== \"undefined\") {\n        config.issuer = uriParams.issuer;\n      }\n    }\n\n    // Secret: required\n    if (\n      typeof uriParams.secret !== \"undefined\" &&\n      SECRET_REGEX.test(uriParams.secret)\n    ) {\n      config.secret = uriParams.secret;\n    } else {\n      throw new TypeError(\"Missing or invalid 'secret' parameter\");\n    }\n\n    // Algorithm: optional\n    if (typeof uriParams.algorithm !== \"undefined\") {\n      if (ALGORITHM_REGEX.test(uriParams.algorithm)) {\n        config.algorithm = uriParams.algorithm;\n      } else {\n        throw new TypeError(\"Invalid 'algorithm' parameter\");\n      }\n    }\n\n    // Digits: optional\n    if (typeof uriParams.digits !== \"undefined\") {\n      if (POSITIVE_INTEGER_REGEX.test(uriParams.digits)) {\n        config.digits = parseInt(uriParams.digits, 10);\n      } else {\n        throw new TypeError(\"Invalid 'digits' parameter\");\n      }\n    }\n\n    return new OTP(config);\n  }\n\n  /**\n   * Converts an HOTP/TOTP object to a Google Authenticator key URI.\n   * @param {HOTP|TOTP} otp HOTP/TOTP object.\n   * @returns {string} Google Authenticator Key URI.\n   */\n  static stringify(otp) {\n    if (otp instanceof HOTP || otp instanceof TOTP) {\n      return otp.toString();\n    }\n\n    throw new TypeError(\"Invalid 'HOTP/TOTP' object\");\n  }\n}\n\nexport { URI };\n","/**\n * Library version.\n * @type {string}\n */\nconst version = \"__OTPAUTH_VERSION__\";\n\nexport { version };\n"],"names":["uintToBuf","num","buf","ArrayBuffer","arr","Uint8Array","acc","i","b64Tab","uint8array2packed","existingPacked","existingPackedLen","bigEndianMod","intOffset","byteOffset","packed","existingByteLen","shiftModifier","length","push","value","binLen","getStrConverter","format","utfType","Error","str","existingBin","existingBinLen","parseInt","substr","isNaN","codePnt","codePntArr","j","transposeBytes","byteCnt","charCodeAt","tmpInt","strPart","firstEqual","indexOf","search","replace","charAt","ignore","getOutputConverter","outputBinLen","outputOptions","binarray","outputLength","formatOpts","srcByte","outputUpper","toUpperCase","triplet","int1","int2","b64Pad","String","fromCharCode","retVal","arrView","globalThis","_typeof","Object","defineProperty","prototype","get","this","configurable","__GLOBALTHIS__","self","window","global","isNode","toString","call","process","nodeRequire","eval","NodeBuffer","Buffer","undefined","NodeCrypto","OPENSSL_TO_JSSHA_ALGO","SHA1","SHA224","SHA256","SHA384","SHA512","hmacDigest","algorithm","key","message","hmac","createHmac","from","update","digest","buffer","variant","TypeError","jsSHA","setHMACKey","getHMAC","pad","digits","prefix","repeat","ALPHABET","base32ToBuf","cstr","bits","index","idx","base32FromBuf","hexToBuf","hexFromBuf","hex","latin1ToBuf","latin1FromBuf","ENCODER","TextEncoder","DECODER","TextDecoder","utf8ToBuf","encode","utf8FromBuf","decode","BrowserCrypto","crypto","msCrypto","randomBytes","size","getRandomValues","Secret","_ref","arguments","_ref$size","_classCallCheck","enumerable","latin1","utf8","base32","timingSafeEqual","a","b","out","HOTP","_ref$issuer","issuer","defaults","_ref$label","label","_ref$secret","secret","_ref$algorithm","_ref$digits","_ref$counter","counter","fromBase32","_ref2","_ref2$counter","generate","_ref3","token","_ref3$counter","validate","e","encodeURIComponent","concat","_ref4","_ref4$algorithm","_ref4$digits","_ref4$counter","offset","byteLength","otp","Math","pow","_ref5","_ref5$counter","_ref5$window","delta","generatedToken","TOTP","_ref$period","period","_ref2$timestamp","timestamp","Date","now","_ref4$period","_ref4$timestamp","floor","_ref5$period","_ref5$timestamp","OTPURI_REGEX","SECRET_REGEX","ALGORITHM_REGEX","INTEGER_REGEX","POSITIVE_INTEGER_REGEX","URI","uri","uriGroups","match","error","Array","isArray","URIError","OTP","uriType","toLowerCase","uriLabel","split","map","decodeURIComponent","uriParams","reduce","cur","pairArr","pairKey","pairVal","pairAcc","config","test","version"],"mappings":"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"}